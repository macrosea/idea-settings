<templateSet group="User">
  <template name="logger" value="private static final Logger logger = LoggerFactory.getLogger($CLASS$.class);" description="LoggerFactory" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="printContext" value="logger.info(&quot;[$CLASS$::$FUNC$]Input: &quot; + $params$);" description="printContext" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="false" />
    <variable name="FUNC" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="params" expression="groovyScript(&quot;'\&quot;' + _1.collect { it + ' = [\&quot; + ' + it + ' + \&quot;]'}.join(', ') + '\&quot;'&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="trycatch" value="try {&#10;    &#10;}        &#10;catch (Exception e) {&#10;    logger.warn(&quot;[$CLASS$::$FUNC$]; Exception: {}&quot;, e.toString());&#10;}" description="coding for try catch block" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNC" expression="methodName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>